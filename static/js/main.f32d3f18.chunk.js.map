{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","console","log","monsters","map","SearchBox","type","placeholder","onChange","onSearchChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAIaA,GCJE,I,4BDIK,SAACC,GAAD,OAEpB,sBAAKC,UAAU,iBAAf,UAEI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,cEVVC,EAAW,SAACR,GAGrB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SACFD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAE3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLdQ,G,OAAY,SAAAb,GAAK,OAC5B,uBACEC,UAAU,aACVa,KAAK,SACLC,YAAY,kBACZC,SAAUhB,EAAMiB,mBC2CLC,E,kDAxCb,aAAc,IAAD,8BACX,gBAcFD,eAAiB,SAAAE,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,gEAQO,IAAD,OAEjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOpC,IAAD,EAE4BC,KAAKN,MAA/Bb,EAFF,EAEEA,SAAUU,EAFZ,EAEYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWgB,eAAgBa,KAAKb,iBACjC,cAAC,EAAD,CAAUN,SAAUoB,W,GAhCTI,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f32d3f18.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) =>(\r\n\r\n<div className='card-container'>\r\n\r\n    <img\r\n        alt='monster'\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n    <h2> {props.monster.name}</h2>\r\n    <p> {props.monster.email}</p>\r\n</div>\r\n\r\n)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card } from '../card/card.component';\r\nexport const Cardlist = (props) => {\r\n\r\n    console.log(props);\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n        \r\n        <Card key={monster.id} monster={monster}/>\r\n       \r\n        \r\n        ))}\r\n   \r\n            \r\n          \r\n\r\n    </div>\r\n}\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = props => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder='search monsters'\r\n    onChange={props.onSearchChange}\r\n  />\r\n);\r\n","\nimport logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport { render } from '@testing-library/react';\nimport {Cardlist} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render(){\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    \n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox onSearchChange={this.onSearchChange} />\n       <Cardlist monsters={filteredMonsters}/>\n      \n    \n       \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}